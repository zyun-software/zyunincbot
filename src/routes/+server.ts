import { TG_TOKEN, URL_DONATE, URL_PANEL } from '$env/static/private';
import { findUserById, telegram } from '$lib/server';
import { text } from '@sveltejs/kit';

export async function POST({ request }) {
	const token = request.headers.get('x-telegram-bot-api-secret-token') ?? '';

	if (TG_TOKEN !== token) {
		return text('–ù–µ–≤—ñ—Ä–Ω–∏–π —Ç–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø—É');
	}

	const data = await request.json();

	const chat_id = data?.message?.from?.id ?? null;

	if (chat_id === null) {
		return text('–ù–µ–≤–¥–∞–ª–æ—Å—è –≤–∏–∑–Ω–∞—á–∏—Ç–∏ user id');
	}

	const user = await findUserById(chat_id);
	if (user === null) {
		await telegram('sendMessage', {
			chat_id,
			text: 'üîí –í–∏ –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ñ –≤ —Å–∏—Å—Ç–µ–º—ñ',
			reply_markup: {
				remove_keyboard: true
			}
		});

		return text('–ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ñ');
	}

	if (user.blocked) {
		await telegram('sendMessage', {
			chat_id,
			text: '‚õîÔ∏è –í–∏ –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω—ñ –≤ —Å–∏—Å—Ç–µ–º—ñ',
			reply_markup: {
				remove_keyboard: true
			}
		});

		return text('–ó–∞–±–ª–æ–∫–æ–≤–∞–Ω—ñ');
	}

	await telegram('sendMessage', {
		chat_id,
		text: 'üåá –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é',
		reply_markup: {
			keyboard: [
				[
					{
						text: 'üè¶',
						web_app: { url: `${URL_PANEL}/bank` }
					},
					{
						text: 'üõçÔ∏è',
						web_app: { url: `${URL_PANEL}/shop` }
					},
					{
						text: 'üì¶',
						web_app: { url: `${URL_PANEL}/warehouse` }
					}
				],
				[
					{
						text: '‚öôÔ∏è',
						web_app: { url: `${URL_PANEL}/settings` }
					},
					{
						text: '‚ÑπÔ∏è',
						web_app: { url: `${URL_PANEL}/info` }
					},
					{
						text: 'üí∏',
						web_app: { url: URL_DONATE }
					}
				]
			],
			resize_keyboard: true
		}
	});

	return text('–≤–∏–∫–æ–Ω–∞–Ω–æ');
}
